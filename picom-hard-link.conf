#################################
#             Shadows           #
#################################

# Enabled client-side shadows on windows. Note desktop windows
# (windows with '_NET_WM_WINDOW_TYPE_DESKTOP') never get shadow,
# unless explicitly requested using the wintypes option.
#
shadow = false

#################################
#           Fading              #
#################################

# Fade windows in/out when opening/closing and when opacity changes,
#  unless no-fading-openclose is used.
fading = false

#################################
#   Transparency / Opacity      #
#################################

# Opacity of inactive windows. (0.1 - 1.0, defaults to 1.0)
inactive-opacity = 0.85;

# Opacity of window titlebars and borders. (0.1 - 1.0, disabled by default)
frame-opacity = 1.0
# frame-opacity = 0.8;

# Let inactive opacity set by -i override the '_NET_WM_OPACITY' values of windows.
inactive-opacity-override = false;

# Default opacity for active windows. (0.0 - 1.0, defaults to 1.0)
active-opacity = 0.95

opacity-rule = [ "100:class_g = 'Firefox'" ];
# focus-exclude = [ "class_g = 'Firefox'" ];
# opacity-rule = [ "100:class_g = 'Firefox' && focused", "100:class_g = 'Firefox' && !focused" ];

#################################
#           Corners             #
#################################

# Sets the radius of rounded window corners. When > 0, the compositor will
# round the corners of windows. Does not interact well with
# `transparent-clipping`.
corner-radius = 10

# Exclude conditions for rounded corners.
rounded-corners-exclude = ["class_g='Firefox'", "class_g='i3bar'"];

# blur:
# {
#   method = "gaussian";
#   size = 10;
#   deviation = 5.0;
# };

#################################
#       General Settings        #
#################################

# Specify the backend to use: `xrender`, `glx`, or `xr_glx_hybrid`.
# `xrender` is the default one.
#
backend = "xrender";

# Enable/disable VSync.
# vsync = false
vsync = true;

# Try to detect WM windows (a non-override-redirect window with no
# child that has 'WM_STATE') and mark them as active.
#
# mark-wmwin-focused = false
mark-wmwin-focused = true;

# Mark override-redirect windows that doesn't have a child window with 'WM_STATE' focused.
# mark-ovredir-focused = false
mark-ovredir-focused = true;

# Detect '_NET_WM_OPACITY' on client windows, useful for window managers
# not passing '_NET_WM_OPACITY' of client windows to frame windows.
#
# detect-client-opacity = false
detect-client-opacity = true;

# Specify refresh rate of the screen. If not specified or 0, picom will
# try detecting this with X RandR extension.
#
# refresh-rate = 60
refresh-rate = 0;

# Use 'WM_TRANSIENT_FOR' to group windows, and consider windows
# in the same group focused at the same time.
#
# detect-transient = false
detect-transient = true;

# Disable the use of damage information.
# This cause the whole screen to be redrawn everytime, instead of the part of the screen
# has actually changed. Potentially degrades the performance, but might fix some artifacts.
# The opposing option is use-damage
#
no-use-damage = false
# use-damage = true;

# Set the log level. Possible values are:
#  "trace", "debug", "info", "warn", "error"
# in increasing level of importance. Case doesn't matter.
# If using the "TRACE" log level, it's better to log into a file
# using *--log-file*, since it can generate a huge stream of logs.
#
# log-level = "debug"
log-level = "warn";

wintypes:
{
  # unknown = { opacity = 0.8; }
  # desktop = { opacity = 0.8; }
  # dock = { opacity = 0.8; }
  # toolbar = { opacity = 0.8; }
  # menu = { opacity = 0.8; }
  # utility = { opacity = 0.8; }
  # splash = { opacity = 0.8; }
  # dialog = { opacity = 0.8; }
  # normal = { opacity = 0.8; }
  # popup_menu = { opacity = 0.8; }
  # dropdown_menu = { opacity = 0.8; }
  # tooltip = { opacity = 0.8; }
  # notification = { opacity = 0.8; }
  # combo = { opacity = 0.8; }
  # dnd = { opacity = 0.8; }
};
